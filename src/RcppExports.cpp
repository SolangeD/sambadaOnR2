// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// sambada
int sambada(std::string nomFichierParam, std::string nomFichierEnv, std::string nomFichierMarqueurs);
RcppExport SEXP _test2_sambada(SEXP nomFichierParamSEXP, SEXP nomFichierEnvSEXP, SEXP nomFichierMarqueursSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type nomFichierParam(nomFichierParamSEXP);
    Rcpp::traits::input_parameter< std::string >::type nomFichierEnv(nomFichierEnvSEXP);
    Rcpp::traits::input_parameter< std::string >::type nomFichierMarqueurs(nomFichierMarqueursSEXP);
    rcpp_result_gen = Rcpp::wrap(sambada(nomFichierParam, nomFichierEnv, nomFichierMarqueurs));
    return rcpp_result_gen;
END_RCPP
}
// supervision
int supervision(std::string nomFichier, int numBlock, int blockSize, int maxDimension, std::string selScore, double scoreThreshold, std::string sortScore, char wordDelim);
RcppExport SEXP _test2_supervision(SEXP nomFichierSEXP, SEXP numBlockSEXP, SEXP blockSizeSEXP, SEXP maxDimensionSEXP, SEXP selScoreSEXP, SEXP scoreThresholdSEXP, SEXP sortScoreSEXP, SEXP wordDelimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type nomFichier(nomFichierSEXP);
    Rcpp::traits::input_parameter< int >::type numBlock(numBlockSEXP);
    Rcpp::traits::input_parameter< int >::type blockSize(blockSizeSEXP);
    Rcpp::traits::input_parameter< int >::type maxDimension(maxDimensionSEXP);
    Rcpp::traits::input_parameter< std::string >::type selScore(selScoreSEXP);
    Rcpp::traits::input_parameter< double >::type scoreThreshold(scoreThresholdSEXP);
    Rcpp::traits::input_parameter< std::string >::type sortScore(sortScoreSEXP);
    Rcpp::traits::input_parameter< char >::type wordDelim(wordDelimSEXP);
    rcpp_result_gen = Rcpp::wrap(supervision(nomFichier, numBlock, blockSize, maxDimension, selScore, scoreThreshold, sortScore, wordDelim));
    return rcpp_result_gen;
END_RCPP
}
// recodePlink
void recodePlink(int nbEch, int nbSNP, std::string nomFichierPlink, std::string nomFichierSortie);
RcppExport SEXP _test2_recodePlink(SEXP nbEchSEXP, SEXP nbSNPSEXP, SEXP nomFichierPlinkSEXP, SEXP nomFichierSortieSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nbEch(nbEchSEXP);
    Rcpp::traits::input_parameter< int >::type nbSNP(nbSNPSEXP);
    Rcpp::traits::input_parameter< std::string >::type nomFichierPlink(nomFichierPlinkSEXP);
    Rcpp::traits::input_parameter< std::string >::type nomFichierSortie(nomFichierSortieSEXP);
    recodePlink(nbEch, nbSNP, nomFichierPlink, nomFichierSortie);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_test2_sambada", (DL_FUNC) &_test2_sambada, 3},
    {"_test2_supervision", (DL_FUNC) &_test2_supervision, 8},
    {"_test2_recodePlink", (DL_FUNC) &_test2_recodePlink, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_test2(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
